{"version":3,"file":"static/js/132.c9d7be7a.chunk.js","mappings":"2NAKaA,EAAQ,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5BG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAwBJ,OACE,kBAAMI,SAvBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MAOpC,OANAJ,EAAKM,QAEahB,EAASiB,KAAI,SAAAC,GAC7B,OAAOA,EAAQN,IAChB,IAEaO,SAASP,GACdQ,MAAM,GAAD,OAAIR,EAAJ,6BAEPT,GACLkB,EAAAA,EAAAA,IAAW,CACTT,KAAAA,EACAG,OAAAA,IAGL,EAGC,WACE,6BACG,IADH,QAGE,kBACEO,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,6BACG,IADH,UAGE,kBACEH,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,2BAGL,ECzDYI,EAAe,WAC1B,IAAMvB,GAAWC,EAAAA,EAAAA,MAEXuB,GAAY1B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMyB,SAAV,IAC7B3B,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5B4B,GAAS3B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAV,IAChCC,QAAQC,IAAIF,GAcZ,OAJAvB,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,gCACGwB,IAAa,+CACO,IAApB3B,EAAS+B,QACR,0DAEA,8BAlBWC,IAAXJ,EAA8B5B,EAEnBA,EAAS4B,QAAO,SAAAV,GAAO,OAClCA,EAAQN,KAAKqB,cAAcd,SAASS,EADF,KAiBZX,KAAI,SAAAC,GAAO,OAE7B,0BACGA,EAAQN,KADX,KACmBM,EAAQgB,MAAO,KAChC,mBACEZ,KAAK,SACLa,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAAclB,EAAQmB,IAArC,EAFX,sBAFOnB,EAAQmB,GAFY,QAgBxC,E,SC5CYC,EAAS,WACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXwB,GAAS3B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAV,IAW1B,OACE,yDAEI,kBAAOhB,KAAK,SAAS2B,SAZZ,SAAAC,GACnB,IAAMC,EAAQC,SAASC,cAAc,kCACrCd,QAAQC,IAAIW,EAAM3B,OAClB,IAAMA,EAAQ2B,EAAM3B,MAAMmB,cAC1BJ,QAAQC,IAAIhB,GACZX,GAASyC,EAAAA,EAAAA,IAAU9B,IACnBe,QAAQC,IAAIF,EACb,EAKwD,cAAY,gBAIlE,ECpBU,SAASiB,IACtB,OACE,iCACE,eAAIC,UAAU,wCAAd,wBACA,SAAC/C,EAAD,KACA,SAACuC,EAAD,KACA,SAACZ,EAAD,MAGL,C","sources":["components/Adder/Adder.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContact } from 'redux/phonebook/operations';\nimport { fetchContacts } from 'redux/phonebook/operations';\n\nexport const Adder = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    form.reset()\n\n    const nameArray = contacts.map(contact => {\n      return contact.name;\n    });\n\n    if (nameArray.includes(name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    return dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        {' '}\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        {' '}\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from 'redux/phonebook/operations';\nimport { useEffect } from 'react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(state => state.isLoading);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n  console.log(filter)\n  const filteredContacts = () => {\n    if (filter === undefined) {return contacts}\n    else {\n      const data = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter)\n      );\n      return data;\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <b>Loading contacts...</b>}\n      {contacts.length === 0 ? (\n        <p>Add some contact to see them.</p>\n      ) : (\n        <ul>\n          {filteredContacts().map(contact =>\n          (\n            <li key={contact.id}>\n              {contact.name}: {contact.phone}{' '}\n              <button\n                type=\"submit\"\n                onClick={() => dispatch(removeContact(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default ContactsList;\n","import { useDispatch } from 'react-redux'\nimport { setFilter } from 'redux/phonebook/filterSlice';\nimport { useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  \n  const handleFinder = e => {\n    const input = document.querySelector('input[data-action=\"setFilter\"]');\n    console.log(input.value)\n    const value = input.value.toLowerCase();\n    console.log(value)\n    dispatch(setFilter(value))\n    console.log(filter)\n  }\n\n        return (\n          <>\n          Find contacts by name \n              <input name=\"filter\" onChange={handleFinder} data-action=\"setFilter\"></input>\n          </>\n\n        )\n    }\n\n","import { Adder } from 'components/Adder/Adder';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function PhonebookPage() {\n  return (\n    <>\n      <h1 className=\"nav text-white justify-content-center\">Phonebook</h1>\n      <Adder />\n      <Filter/>\n      <ContactsList/>\n    </>\n  );\n};"],"names":["Adder","contacts","useSelector","state","dispatch","useDispatch","useEffect","fetchContacts","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","number","reset","map","contact","includes","alert","addContact","type","pattern","title","required","ContactsList","isLoading","filter","console","log","length","undefined","toLowerCase","phone","onClick","removeContact","id","Filter","onChange","e","input","document","querySelector","setFilter","PhonebookPage","className"],"sourceRoot":""}