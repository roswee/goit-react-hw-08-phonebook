{"version":3,"file":"static/js/132.67a7e34b.chunk.js","mappings":"2NAKaA,EAAQ,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5BG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAwBJ,OACE,kBAAMI,SAvBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MAOpC,OANAJ,EAAKM,QAEahB,EAASiB,KAAI,SAAAC,GAC7B,OAAOA,EAAQN,IAChB,IAEaO,SAASP,GACdQ,MAAM,GAAD,OAAIR,EAAJ,6BAEPT,GACLkB,EAAAA,EAAAA,IAAW,CACTT,KAAAA,EACAG,OAAAA,IAGL,EAG+BO,UAAU,aAAxC,WACE,mBAAOA,UAAU,wBAAjB,WACA,gBAAKA,UAAU,sBAAf,UACE,iBAAMA,UAAU,mBAAmBC,GAAG,4BAAtC,qBAEA,kBACEC,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRL,UAAU,eAAe,aAAW,UAAU,mBAAiB,kCAGnE,mBAAOA,UAAU,mBAAjB,WACA,gBAAKA,UAAU,sBAAf,UACE,iBAAMA,UAAU,mBAAmBC,GAAG,4BAAtC,uBAEA,kBACEC,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRL,UAAU,eAAe,aAAW,UAAU,mBAAiB,kCAGnE,mBAAQE,KAAK,SAASI,MAAO,CAACC,MAAM,QAASP,UAAU,kBAAvD,2BAGL,EC7DYQ,EAAe,WAC1B,IAAM3B,GAAWC,EAAAA,EAAAA,MAEX2B,GAAY9B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM6B,SAAV,IAC7B/B,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5BgC,GAAS/B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAM8B,MAAV,IAchC,OAJA3B,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,gCACG4B,IAAa,+CACO,IAApB/B,EAASiC,QACR,cAAGX,UAAU,aAAb,4CAEA,eAAIA,UAAU,yCAAd,eAlBWY,IAAXF,EAA8BhC,EAEnBA,EAASgC,QAAO,SAAAd,GAAO,OAClCA,EAAQN,KAAKuB,cAAchB,SAASa,EADF,KAiBZf,KAAI,SAAAC,GAAO,OAE7B,gBAAII,UAAU,sBAAsBM,MAAO,CAACQ,SAAU,SAAtD,UACGlB,EAAQN,KADX,KACmBM,EAAQmB,MAAO,KAChC,mBACEb,KAAK,SACLc,QAAS,kBAAMnC,GAASoC,EAAAA,EAAAA,IAAcrB,EAAQK,IAArC,EAFX,sBAFmEL,EAAQK,GAFhD,QAgBxC,E,SC5CYiB,EAAS,WACpB,IAAMrC,GAAWC,EAAAA,EAAAA,MAQX,OACE,iBAAKkB,UAAU,aAAf,mCAEI,kBAAOV,KAAK,SAAS6B,SATZ,SAAAC,GACnB,IACM5B,EADQ6B,SAASC,cAAc,kCACjB9B,MAAMqB,cAC1BhC,GAAS0C,EAAAA,EAAAA,IAAU/B,GACpB,EAKwD,cAAY,YAAYQ,UAAU,UAIxF,ECfU,SAASwB,IACtB,OACE,iBAAKxB,UAAU,kHAAf,WACE,eAAIA,UAAU,wCAAd,wBACA,SAACvB,EAAD,KACA,SAACyC,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["components/Adder/Adder.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContact } from 'redux/phonebook/operations';\nimport { fetchContacts } from 'redux/phonebook/operations';\n\nexport const Adder = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    form.reset()\n\n    const nameArray = contacts.map(contact => {\n      return contact.name;\n    });\n\n    if (nameArray.includes(name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    return dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"text-white\">\n      <label className=\"input-group mb-3 mt-3\">\n      <div className=\"input-group-prepend\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Name</span>\n        </div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"\n        />\n      </label>\n      <label className=\"input-group mb-3\">\n      <div className=\"input-group-prepend\">\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Number</span>\n        </div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"\n        />\n      </label>\n      <button type=\"submit\" style={{width:\"100%\"}} className=\"btn btn-success\">Add contact</button>\n    </form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from 'redux/phonebook/operations';\nimport { useEffect } from 'react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(state => state.isLoading);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n  const filteredContacts = () => {\n    if (filter === undefined) {return contacts}\n    else {\n      const data = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter)\n      );\n      return data;\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <b>Loading contacts...</b>}\n      {contacts.length === 0 ? (\n        <p className=\"text-white\">Add some contact to see them.</p>\n      ) : (\n        <ul className=\"text-white list-group list-group-flush\">\n          {filteredContacts().map(contact =>\n          (\n            <li className=\"list-group-item m-1\" style={{maxWidth: \"350px\"}} key={contact.id}>\n              {contact.name}: {contact.phone}{' '}\n              <button\n                type=\"submit\"\n                onClick={() => dispatch(removeContact(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default ContactsList;\n","import { useDispatch } from 'react-redux'\nimport { setFilter } from 'redux/phonebook/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  \n  const handleFinder = e => {\n    const input = document.querySelector('input[data-action=\"setFilter\"]');\n    const value = input.value.toLowerCase();\n    dispatch(setFilter(value))\n  }\n\n        return (\n          <div className=\"text-white\">\n          Find contacts by name \n              <input name=\"filter\" onChange={handleFinder} data-action=\"setFilter\" className=\"m-1\"></input>\n          </div>\n\n        )\n    }\n\n","import { Adder } from 'components/Adder/Adder';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function PhonebookPage() {\n  return (\n    <div className=\"position-absolute top-50 start-50 translate-middle d-flex flex-column align-items-center justify-content-center\">\n      <h1 className=\"nav text-white justify-content-center\">Phonebook</h1>\n      <Adder />\n      <Filter/>\n      <ContactsList />\n    </div>\n  );\n};"],"names":["Adder","contacts","useSelector","state","dispatch","useDispatch","useEffect","fetchContacts","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","number","reset","map","contact","includes","alert","addContact","className","id","type","pattern","title","required","style","width","ContactsList","isLoading","filter","length","undefined","toLowerCase","maxWidth","phone","onClick","removeContact","Filter","onChange","e","document","querySelector","setFilter","PhonebookPage"],"sourceRoot":""}